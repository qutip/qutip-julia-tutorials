---
title: "Resonance fluorescence"
author: Li-Xun Cai
date: 2050-01-21# last update (keep this comment as a reminder)

engine: julia
execute:
  cache: true
---

Inspirations taken from [this QuTiP tutorial](https://nbviewer.org/urls/qutip.org/qutip-tutorials/tutorials-v5/lectures/Lecture-13-Resonance-flourescence.ipynb) by J. R. Johansson.

In this tutorial, the usages of 

- `QuantumToolbox.liouvillian`,
- `QuantumToolbox.mesolve`,
- `QuantumToolbox.correlation_2op_1t` and 
- `QuantumToolbox.spectrum_correlation_fft` 

are demonstrated with the example of resonance fluorescence in the weak field limit. Note that we set $\hbar = 1$ throughout.

## Introduction

Resonance fluorescence is the radiative behaviour of a two-level atom driven by a resonating light mode in coherent state (usually a monochromic laser beam). The Hamiltonian $H = H_\text{a} + H_\text{drv}$ has that

- $H_\text{a} = \frac{\omega_a}{2} \sigma_z$
- $H_\text{drv} = \Omega cos(\omega_L t) (\sigma^{+} + \sigma^{-})$
  
with 

- $\omega_a$: Frequency of the two-level atom
- $\omega_L$: Frequency of the light field
- $\Omega$: Field strength of the light field
- $\sigma_{x,y,z}$: Pauli's matrices
- $\sigma^{+}, \sigma^{-}$: Raising and lowering operators, equivalent to $|e\rangle\langle g|$ and $|g\rangle\langle e|$ respectively

To simplify the problem, we move from the lab frame to the rotating frame by the unitary $U = e^{-i \omega_L t \cdot \sigma_z}$ to the total Hamiltonian with $H^\text{rot} = U^\dagger H U -i U^\dagger \frac{d}{dt} U$. The later term is simply $-\frac{\omega_L}{2}\sigma_z$, with each component transformed to
$$
U^\dagger H_\text{a} U = \frac{\omega_a}{2}\sigma_z,
$$
$$
U^\dagger H_\text{drv} U = \Omega cos(\omega_L t) \Big[e^{i\omega_L t}\sigma^{+} + e^{-i\omega_L t}\sigma^{-}\Big].
$$

In the weak field limit, where $\Omega/\omega_L \ll 1$, we can drop the time-dependent part in the rotating frame through [rotating-wave approximation (RWA)](https://en.wikipedia.org/wiki/Rotating-wave_approximation). First, we expand $\cos(\omega_L t)$ to its exponential form,
$$
\Omega cos(\omega_L t) \Big[e^{i\omega_L t}\sigma^{+} + e^{-i\omega_L t}\sigma^{-}\Big] = \frac{\Omega}{2}\Big[(1 + e^{2i\omega_L t})\sigma^{+} + (1 + e^{-2i\omega_L t})\sigma^{-}\Big]
$$
The time-dependent parts evolving with frequency $2\omega_L$ are dropped, yielding
$$
H^\text{rot} \simeq \frac{\omega_a}{2} \sigma_z + \frac{\Omega}{2} \sigma_x - \frac{\omega_L}{2} \sigma_z = \frac{\Delta}{2} \sigma_z + \frac{\Omega}{2} \sigma_x
$$
where $\Delta = \omega_a - \omega_L$ is the detuning between the two-level atom and the driving light. In the realistic near-resonance situation where $\Delta \simeq 0$, characteristic of the radiative behaviour remains, thus we only consider exact resonance $\Delta = 0$ for the following usage.

### Dissipation dynamics with EM continuum

From the standard interaction Hamiltonian of spin-boson model $H_\text{int} = \sum_l \alpha_l b_l \sigma^{+} + \text{h.c.}$, we follow the Born-Markovian approximation to obtain the dissipative part of the dynamics, alone with von Neumann equation
$$
\mathcal{L} = -i\left[H^\text{rot}, \rho^\text{rot}\right] + \gamma_0 n(\omega_a, T) \mathcal{D}[\sigma^{+}] + \gamma_0 [1 + n(\omega_a, T)] \mathcal{D}[\sigma^{-}]
$$

where

- $\gamma_0$: Dissipation rate of the atom
- $n(\omega, T)$: Bose-Einstein distribution of the thermal field at temperature $T$
- $\mathcal{D}[\cdot]$: The [Lindblad dissipator](https://en.wikipedia.org/wiki/Lindbladian) (has exactly the same expresseion in the lab frame and the rotating frame)

## Usage

```{julia}
import QuantumToolbox: QuantumObjectEvolution, n_thermal, liouvillian, sigmap, sigmam, sigmax, 
    sigmay, sigmaz, basis, mesolve, correlation_2op_1t, spectrum_correlation_fft
import CairoMakie: Figure, Axis, @L_str, lines!, axislegend, display, ylims!, xlims!
```

```{julia}
Ω = 1
γ0 = 0.05 * Ω
KT = 0 # treating thermal field at vacuum avoids energy input from the environment
```

We define a function that returns the liouvillian of the system, which is a `QuantumObject` of `HOpType` for `QuantumToolbox` and is accepted by some functions in their `H` field.
```{julia}
function liouvillian_spec(_Ω, _γ0, _KT)
    H = _Ω/2 * sigmax()
    c_ops = [
        √(_γ0 * n_thermal(_Ω, _KT)) * sigmap(),
        √(_γ0 * (1 + n_thermal(_Ω, _KT))) * sigmam(),
    ]
    return liouvillian(H, c_ops)    
end
```

We first use `QuantumObject.mesolve` to solve the master equation to observe the dynamics
```{julia}
e_ket = basis(2,1)
e_ops = [
    sigmax(),
    sigmay(),
    sigmaz(),
    sigmam(),
    sigmap(),
    e_ket * e_ket'
]
ψ0 = basis(2,0) # set initial state being purely excited to better observe the radiative behaviour
tlist = 0:0.1:20
# Since we are already passing a liouvillian to mesolve, no c_ops are needed hence the `nothing`
L = liouvillian_spec(Ω, γ0, KT)
print(L)
sol = mesolve(L, ψ0, tlist, nothing, e_ops = e_ops)
```

Obeserving the expectation values dynamics of Pauli's matrices, we see that the Bloch vector $(\langle \sigma_x \rangle, \langle \sigma_y \rangle, \langle \sigma_z \rangle)$ shortens over time, which is consistent with the dissipative behaviour. Also, the population of excited state has oscillation amplitude decaying over time.
```{julia}
expect = real.(sol.expect)
fig1 = Figure(size = (600,300))
ax11 = Axis(
    fig1[1,1]
)
lines!(ax11, tlist, expect[1,:], label = L"\langle \sigma_x \rangle")
lines!(ax11, tlist, expect[2,:], label = L"\langle \sigma_y \rangle")
lines!(ax11, tlist, expect[3,:], label = L"\langle \sigma_z \rangle")
axislegend(ax11)
ylims!(ax11, (-1,1))

ax12 = Axis(
    fig1[2,1],
    xlabel = L"time $[1/\Omega]$"
)
lines!(ax12, tlist, expect[6,:], label = L"P_e")
axislegend(ax12)
ylims!(ax12, (0,1))

display(fig1);
```

Further, we check the effect of different values of the damping rate. Note that despite these dissipation rates looked enormous at first glance, it is still to the order of the field strength and therefore considered dissipative for the system in the lab frame.
```{julia}
results = []
γ0s = Ω .* [0.1, 0.5, 1]
for γ0 in γ0s
    result = mesolve(liouvillian_spec(Ω, γ0, KT), ψ0, tlist, nothing, e_ops = e_ops)

    push!(results, (γ0 = γ0, expect = result.expect))
end
```

The expectation values dynamics of $\sigma^{+}$ and $\sigma^{-}$ shows the driving-field-induced dipole moment of the atom oscillates and persists.
```{julia}
fig2 = Figure(size = (600,300))
ax2 = Axis(
    fig2[1,1],
    xlabel = L"time $[1/\Omega]$",
    title = L"\langle\sigma_{+}\rangle"
)

for (γ0, expect) in results
    lines!(ax2, tlist, imag(expect[5,:]), label = "γ0 = $γ0")
end

axislegend(ax2)
display(fig2);
```

```{julia}
fig3 = Figure(size = (600,300))
ax3 = Axis(
    fig3[1,1],
    xlabel = L"time $[1/\Omega]$",
    title = L"\langle\sigma_{-}\rangle"
)

for (γ0, expect) in results
    lines!(ax3, tlist, imag(expect[4,:]), label = "γ0 = $γ0")
end
axislegend(ax3)
display(fig3);
```

We now move to the analysis of the correlation function $C(\tau) = \langle \sigma^{+}(\tau) \sigma^{-}(0)\rangle$, which describes the radiative behaviour of the atom towrds its surrounding environment. Using `QuantumToolbox.correlation_2op_1t`, we can obtain the correlation function as a function of $\tau$ and use `QuantumToolbox.spectrum_correlation_fft` to obtain the corresponding Fourier transform.
```{julia}
fig4 = Figure(size = (600,300))
ax41 = Axis(
    fig4[1,1],
    xlabel = L"\tau",
    title = L"C(\tau)"
)

ax42 = Axis(
    fig4[1,2],
    xlabel = L"\omega",
    ylabel = "fft amplitude"
)
τlist = 0:0.1:100
for γ0 in γ0s
    L = liouvillian_spec(Ω, γ0, KT)    
    corr = correlation_2op_1t(L, ψ0, τlist, nothing, sigmap(), sigmam())

    lines!(ax41, τlist, real(corr), label = "γ0 = $γ0")

    fft_ωlist, fft_spect = spectrum_correlation_fft(τlist, corr)
    lines!(ax42, fft_ωlist, fft_spect, label = "γ0 = $γ0")
end
xlims!(ax42, (-2,2))
axislegend(ax41)
axislegend(ax42)
display(fig4);
```
In the above plots, one finds that the correlation functions decay faster with higher dissipation rate, and therefore the lower spectral peaks. On the other hand, the higher spectral peaks means the radiation is brighter in terms of intensity.

## Version Information
```{julia}
import QuantumToolbox
QuantumToolbox.versioninfo()
```
